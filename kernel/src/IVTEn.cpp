/*
 * IVTEn.cpp
 *
 *  Created on: Aug 20, 2015
 *      Author: OS1
 */

#include "IVTEn.h"

IVTEntry *IVTEntry::IVT[256];

////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////

IVTEntry::IVTEntry(IVTNo No, Routine rut):myIVTNo(No), newRoutine(rut), myKernelEv(0)
{

#ifndef BCC_BLOCK_IGNORE
	asm cli;

	oldRoutine = getvect(No);
	setvect(No, newRoutine);

	asm sti;
#endif

	IVT[No]=this;
}

/////////////////////////////////////////////////////////////////////////////////////////////

IVTEntry::~IVTEntry()
{
#ifndef BCC_BLOCK_IGNORE
	asm cli;
	setvect(myIVTNo, oldRoutine);
	asm sti;
#endif
	IVT[myIVTNo]-> myKernelEv = 0;
}

//////////////////////////////////////////////////////////////////////////////////////////////

void IVTEntry::setKernelEvent(KernelEv *ev)
{
	myKernelEv = ev;
}

//////////////////////////////////////////////////////////////////////////////////////////////

void IVTEntry::removeKernelEvent()
{
	myKernelEv = 0;
}

//////////////////////////////////////////////////////////////////////////////////////////////

void IVTEntry::callOldRoutine()
{
	(*oldRoutine)();
}

//////////////////////////////////////////////////////////////////////////////////////////////

void IVTEntry::signalEvent()   //odavde se poziva automatski signal, to je onaj iz interrupt f-je
{
	if(myKernelEv != 0)
	{
		KernelEv::signalEvent(myKernelEv);
	}
}

///////////////////////////////////////////END////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////

